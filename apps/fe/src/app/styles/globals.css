@import './vars.css';
@import './fonts.css';
@import './md.css';
@import 'tailwindcss';

* {
	box-sizing: border-box;
}

html,
body {
	overflow-x: hidden;
	&::-webkit-scrollbar {
		width: 0px;
		height: 3px;
	}
}

body {
	color: var(--color-text-body);
	/* font-family: 'PlaywriteHU', Arial, Helvetica, sans-serif; */
	font-family: var(--font-roboto);
}

::-webkit-scrollbar {
	width: 3px;
	height: 5px;
}

::-webkit-scrollbar-track {
	background: var(--color-background);
}

::-webkit-scrollbar-thumb {
	background: color-mix(in srgb, var(--color-primary) 50%, transparent);
	border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
	cursor: grab;
	background: var(--color-primary-hover);
}

::-webkit-scrollbar-thumb:active {
	cursor: grab;
	background: var(--color-primary-active);
}

/* Fade in from bottom to top */
@keyframes fade-in-bottom {
	from {
		opacity: 0;
		transform: translateY(20px);
	}
	to {
		opacity: 1;
		transform: translateY(0);
	}
}
.animate-fade-in-bottom {
	animation: fade-in-bottom 0.6s ease-out forwards;
}

/* Fade in from top to bottom */
@keyframes fade-in-top {
	from {
		opacity: 0;
		transform: translateY(-20px);
	}
	to {
		opacity: 1;
		transform: translateY(0);
	}
}
.animate-fade-in-top {
	animation: fade-in-top 0.6s ease-out forwards;
}

/* Fade in from left to right */
@keyframes fade-in-left {
	from {
		opacity: 0;
		transform: translateX(-20px);
	}
	to {
		opacity: 1;
		transform: translateX(0);
	}
}
.animate-fade-in-left {
	animation: fade-in-left 0.6s ease-out forwards;
}

/* Fade in from right to left */
@keyframes fade-in-right {
	from {
		opacity: 0;
		transform: translateX(20px);
	}
	to {
		opacity: 1;
		transform: translateX(0);
	}
}
.animate-fade-in-right {
	animation: fade-in-right 0.6s ease-out forwards;
}

/* Fade in scale up (nhỏ -> lớn tại chỗ) */
@keyframes fade-in-scale {
	from {
		opacity: 0;
		transform: scale(0.8);
	}
	to {
		opacity: 1;
		transform: scale(1);
	}
}
.animate-fade-in-scale {
	animation: fade-in-scale 0.6s ease-out forwards;
}

/* New staggered fade-in for sequential elements */
@keyframes fade-in-stagger {
	from {
		opacity: 0;
		transform: translateY(10px) scale(0.9);
	}
	to {
		opacity: 1;
		transform: translateY(0) scale(1);
	}
}
.animate-fade-in-stagger {
	animation: fade-in-stagger 0.5s ease-out forwards;
}

/* Existing animations */
@keyframes fade-in {
	from {
		opacity: 0;
		transform: translateY(20px);
	}
	to {
		opacity: 1;
		transform: translateY(0);
	}
}

.animate-fade-in {
	animation: fade-in 0.6s ease-out forwards;
}

/* Shake animation */
@keyframes shake {
	0%,
	100% {
		transform: translateX(0) rotate(0deg);
	}
	20%,
	60% {
		transform: translateX(-5px) rotate(-1deg);
	}
	40%,
	80% {
		transform: translateX(5px) rotate(1deg);
	}
}
/* Continuous shake animation */
.animate-shake-continuous {
	animation: shake 0.5s ease-in-out infinite;
}

/* Segmented shake animation (shakes in bursts with 1s pause before each shake) */
@keyframes shake-segmented {
	0%,
	40%,
	100% {
		transform: translateX(0) rotate(0deg);
	}
	45% {
		transform: translateX(-5px) rotate(-1deg);
	}
	50% {
		transform: translateX(5px) rotate(1deg);
	}
	55% {
		transform: translateX(-5px) rotate(-1deg);
	}
	60% {
		transform: translateX(0) rotate(0deg);
	}
}
.animate-shake-segmented {
	animation: shake-segmented 1.5s ease-in-out infinite;
}

/* Another variant: shake with larger movements */
@keyframes shake-strong {
	0%,
	100% {
		transform: translateX(0) rotate(0deg);
	}
	10%,
	30%,
	50%,
	70%,
	90% {
		transform: translateX(-10px) rotate(-2deg);
	}
	20%,
	40%,
	60%,
	80% {
		transform: translateX(10px) rotate(2deg);
	}
}
.animate-shake-strong {
	animation: shake-strong 0.6s ease-in-out infinite;
}

/* SweetAlert2 custom colors using CSS variables */
.swal2-popup {
	color: var(--color-text-body);
}

.swal2-title {
	color: var(--color-text-primary);
}

button.swal2-confirm {
	background-color: var(--color-text-link);
	color: var(--color-text-inverse);
}

button.swal2-confirm:hover,
button.swal2-confirm:focus {
	background-color: var(--color-text-link-hover);
}

.swal2-cancel {
	background-color: var(--color-error);
	color: var(--color-text-inverse);
}
.swal2-cancel:hover,
.swal2-cancel:focus {
	background-color: var(--color-error-hover);
}

.swal2-icon.swal2-success {
	border-color: var(--color-success);
	color: var(--color-success);
}
.swal2-icon.swal2-error {
	border-color: var(--color-error);
	color: var(--color-error);
}
.swal2-icon.swal2-warning {
	border-color: var(--color-warning);
	color: var(--color-warning);
}
.swal2-icon.swal2-info {
	border-color: var(--color-info);
	color: var(--color-info);
}
